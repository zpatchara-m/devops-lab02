name: Lab02 workflow

on:
    push:
        branches:
            - main
            
jobs:
    # You can use any name for this, but ensure that it make sense and easy to understand
    unittest: 
        name: Unit Test
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v3 #Use checkout action to download the source code to run unittest
              name: Checkout
            - uses: actions/setup-go@v3 #Setup golang environment for runnint unittest
              name: Setup Go environment
              with:
                go-version-file: ./src/go.mod
            - name: Run Unit Test
              working-directory: ./src
              run: go test ./...
              
    coverage:   
        name: Code Coverage
        runs-on: ubuntu-latest
        steps:
          - uses: actions/checkout@v3
          - uses: actions/setup-go@v3
            with:
              go-version-file: './src/go.mod'
          - run: go mod tidy
            working-directory: ./src
            name: Download libraries
          - run: go test -coverprofile coverage.out ./...
            working-directory: ./src
            name: Code Coverage Checking
          - run: go tool cover -func coverage.out -o coverage.txt
            working-directory: ./src
            name: Convert Code Coverage Report format
          - uses: actions/upload-artifact@v3
            name: Store code coverage report 
            with:
              name: code-coverage-report
              path: src/coverage.txt
              
          - name: Upload coverage report to artifact
            uses: actions/upload-artifact@v3
            with:
                name: code-coverage-report
                path: src/coverage.txt
                
    code-vuln-scan:
        name: Code Vulnerability Scan
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v3 #Use checkout action to download the source code to run unittest
              name: Checkout
            - uses: aquasecurity/trivy-action@master
              name: Vulnerability Scan
              with:
                scan-type: 'fs'
                ignore-unfixed: true
                format: 'sarif'
                output: 'trivy-results.sarif'
                severity: 'CRITICAL'
            - uses: actions/upload-artifact@v3
              name: Save Code vulnerability scan report
              with:
                name: code-vuln-report
                path: trivy-results.sarif
                
    quality-gate:
        runs-on: ubuntu-latest
        needs: ["coverage", "unittest", "code-vuln-scan"]
        steps:
        - uses: actions/checkout@v3
        - uses: actions/download-artifact@v3
          with:
            name: code-coverage-report
            path: ./src
        - run: python coverage.py 1
          working-directory: ./src
          name: Simple Quality Gate
